root = true

############################################################################################################
# Default settings for all files:
############################################################################################################
[*]
charset                  = utf-8
indent_style             = space
tab_width                = 4
trim_trailing_whitespace = true

############################################################################################################
# ReSharper properties
############################################################################################################
resharper_apply_auto_detected_rules                = false
resharper_show_autodetect_configure_formatting_tip = false

############################################################################################################
# File Extension Specific Settings
############################################################################################################

# Ignore style warnings for generated code
[*{_AssemblyInfo.cs,.notsupported.cs}]
generated_code = true

# Settings for C# code files
[*.{cs,csx}]
indent_size          = 4
insert_final_newline = true

# C++ Files
[*.{cpp,h,in}]
curly_bracket_next_line = true
indent_brace_style      = Allman

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Xml build files
[*.builds]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

[*.{appxmanifest,asax,ascx,aspx,axaml,axml,build,config,cs,cshtml,csproj,dbml,discomap,dtd,htm,html,jsproj,lsproj,master,njsproj,nuspec,paml,proj,props,razor,resw,resx,skin,StyleCop,targets,tasks,vb,vbproj,xaml,xamlx,xml,xoml,xsd}]
indent_size = 4
tab_width   = 4

# JSON Files
[*.{json,json5,webmanifest}]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# Markdown Files
[*.{md,mdx}]
trim_trailing_whitespace = false

# Web Files
[*.{htm,html,js,jsm,ts,tsx,cjs,cts,ctsx,mjs,mts,mtsx,css,sass,scss,less,pcss,svg,vue}]
indent_size = 2

# Batch Files
[*.{cmd,bat}]

# Shell Scripts
[*.sh]
indent_size = 2
[*.{cmd,bat}]
indent_size = 2
[*.ps1]
indent_size = 2

# Makefiles
[Makefile]
indent_style = tab

# Terraform files
[*.tf]
indent_size = 2

############################################################################################################
# .NET Formatting Options https://learn.microsoft.com/en-us/visualstudio/ide/reference/code-styles-refactoring-options?view=vs-2022
############################################################################################################
[*.{cs,csx}]
dotnet_sort_system_directives_first = true

############################################################################################################
# C# Formatting Options https://learn.microsoft.com/en-us/visualstudio/ide/reference/code-styles-refactoring-options?view=vs-2022
############################################################################################################
[*.{cs,csx}]
csharp_indent_block_contents                                             = true
csharp_indent_braces                                                     = false
csharp_indent_case_contents                                              = true
csharp_indent_case_contents_when_block                                   = true
csharp_indent_labels                                                     = flush_left
csharp_indent_switch_labels                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_else                                              = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_open_brace                                        = all
csharp_new_line_between_query_expression_clauses                         = true
csharp_preserve_single_line_blocks                                       = true:none
csharp_preserve_single_line_statements                                   = false:none
csharp_space_after_cast                                                  = false
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_after_comma                                                 = true
csharp_space_after_dot                                                   = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_after_semicolon_in_for_statement                            = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_around_declaration_statements                               = do_not_ignore
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_before_comma                                                = false
csharp_space_before_dot                                                  = false
csharp_space_before_open_square_brackets                                 = false
csharp_space_before_semicolon_in_for_statement                           = false
csharp_space_between_empty_square_brackets                               = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis        = false
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_parentheses                                         = false
csharp_space_between_square_brackets                                     = false

############################################################################################################
# .NET code refactoring options https://learn.microsoft.com/en-us/visualstudio/ide/reference/code-styles-refactoring-options?view=vs-2022
############################################################################################################
[*.{cs,csx}]
dotnet_style_operator_placement_when_wrapping = end_of_line:suggestion

############################################################################################################
# Code style rules https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
############################################################################################################
[*.{cs,csx}]

# IDE0003, IDE0009 Remove this qualification
dotnet_style_qualification_for_field                             = false:none
dotnet_style_qualification_for_property                          = false:none
dotnet_style_qualification_for_method                            = false:none
dotnet_style_qualification_for_event                             = false:none
dotnet_diagnostic.IDE0003.severity                               = none
dotnet_diagnostic.IDE0009.severity                               = none

# IDE0005 Unnecessary using directives
dotnet_diagnostic.IDE0005.severity                               = suggestion

# IDE0007, IDE0008 Use var instead of explicit type
csharp_style_var_for_built_in_types                              = true:suggestion
csharp_style_var_when_type_is_apparent                           = true:suggestion
csharp_style_var_elsewhere                                       = true:suggestion
dotnet_diagnostic.IDE0007.severity                               = suggestion
dotnet_diagnostic.IDE0008.severity                               = suggestion

# IDE0011 Braces should be used even for single-line control statements
csharp_prefer_braces                                             = true:suggestion
dotnet_diagnostic.IDE0011.severity                               = suggestion

# IDE0016 Use throw expression
csharp_style_throw_expression                                    = true:silent
dotnet_diagnostic.IDE0016.severity                               = silent

# IDE0017 Use object initializers
dotnet_style_object_initializer                                  = true:suggestion
dotnet_diagnostic.IDE0017.severity                               = suggestion

# IDE0018 Inline variable declaration
csharp_style_inlined_variable_declaration                        = true:suggestion
dotnet_diagnostic.IDE0018.severity                               = suggestion

# IDE0019, IDE0260 Use pattern matching to avoid as followed by a null check
csharp_style_pattern_matching_over_as_with_null_check            = true:suggestion
dotnet_diagnostic.IDE0019.severity                               = suggestion
dotnet_diagnostic.IDE0260.severity                               = suggestion

# IDE0020 Use pattern matching to avoid is check followed by a cast (with variable)
csharp_style_pattern_matching_over_is_with_cast_check            = true:suggestion
dotnet_diagnostic.IDE0020.severity                               = suggestion

# IDE0021 Use expression body for constructors
csharp_style_expression_bodied_constructors                      = false:none
dotnet_diagnostic.IDE0021.severity                               = none

# IDE0022 Use expression body for methods
csharp_style_expression_bodied_methods                           = true:silent
dotnet_diagnostic.IDE0022.severity                               = none

# IDE0023, IDE0024 Use expression body for conversion operators
csharp_style_expression_bodied_operators                         = true:silent
dotnet_diagnostic.IDE0023.severity                               = none
dotnet_diagnostic.IDE0024.severity                               = none

# IDE0025 Use expression body for properties
csharp_style_expression_bodied_properties                        = true:silent
dotnet_diagnostic.IDE0025.severity                               = none

# IDE0026 Use expression body for indexers
csharp_style_expression_bodied_indexers                          = true:silent
dotnet_diagnostic.IDE0026.severity                               = none

# IDE0027 Use expression body for accessors
csharp_style_expression_bodied_accessors                         = true:silent
dotnet_diagnostic.IDE0027.severity                               = none

# IDE0028 Use collection initializer
dotnet_style_collection_initializer                              = true:suggestion
dotnet_diagnostic.IDE0028.severity                               = suggestion

# IDE0028, IDE00300-IDE00305 Use collection expression
dotnet_style_prefer_collection_expression                        = false:none
dotnet_diagnostic.IDE0028.severity                               = none
dotnet_diagnostic.IDE0300.severity                               = none
dotnet_diagnostic.IDE0301.severity                               = none
dotnet_diagnostic.IDE0302.severity                               = none
dotnet_diagnostic.IDE0303.severity                               = none
dotnet_diagnostic.IDE0304.severity                               = none
dotnet_diagnostic.IDE0305.severity                               = none

# IDE0031 Use null propagation
dotnet_style_null_propagation                                    = true:suggestion
dotnet_diagnostic.IDE0031.severity                               = suggestion

# IDE0032 Use auto property
dotnet_style_prefer_auto_properties                              = true:suggestion
dotnet_diagnostic.IDE0032.severity                               = suggestion

# IDE0033 Use explicitly provided tuple name
dotnet_style_explicit_tuple_names                                = true:silent
dotnet_diagnostic.IDE0033.severity                               = silent

# IDE0034 Simplify default expression
csharp_prefer_simple_default_expression                          = true:suggestion
dotnet_diagnostic.IDE0034.severity                               = suggestion

# IDE0036 Order modifiers
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async,file,required:suggestion

# IDE0037 Use inferred member name
dotnet_style_prefer_inferred_tuple_names                         = true:suggestion
dotnet_diagnostic.IDE0037.severity                               = suggestion

# IDE0037 Use inferred member name
dotnet_style_prefer_inferred_anonymous_type_member_names         = true:suggestion
dotnet_diagnostic.IDE0037.severity                               = suggestion

# IDE0039 Use local function instead of lambda
csharp_style_prefer_local_over_anonymous_function                = true:silent
dotnet_diagnostic.IDE0039.severity                               = silent

# IDE0040 Add accessibility modifiers
dotnet_style_require_accessibility_modifiers                     = always:warning
dotnet_diagnostic.IDE0040.severity                               = warning

# IDE0041 Use is null check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_diagnostic.IDE0041.severity                               = suggestion

# IDE0042 Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration                  = false:none
dotnet_diagnostic.IDE0042.severity                               = none

# IDE0044 Add readonly modifier
dotnet_style_readonly_field                                      = true:suggestion
dotnet_diagnostic.IDE0044.severity                               = suggestion

# IDE0045 Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment       = true:suggestion
dotnet_diagnostic.IDE0045.severity                               = none

# IDE0046 Use conditional expression for return
dotnet_style_prefer_conditional_expression_over_return           = true:suggestion
dotnet_diagnostic.IDE0046.severity                               = none

# IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_arithmetic_binary_operators          = never_if_unnecessary:none
dotnet_diagnostic.IDE0047.severity                               = none

# IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_other_binary_operators               = always_for_clarity:silent
dotnet_diagnostic.IDE0047.severity                               = silent

# IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_other_operators                      = never_if_unnecessary:none
dotnet_diagnostic.IDE0047.severity                               = none

# IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_relational_binary_operators          = never_if_unnecessary:none
dotnet_diagnostic.IDE0047.severity                               = none

# IDE0049 Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members       = true:suggestion
dotnet_diagnostic.IDE0049.severity                               = suggestion

# IDE0049 Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_member_access                   = true:suggestion
dotnet_diagnostic.IDE0049.severity                               = suggestion

# IDE0053 Use expression body for lambdas
csharp_style_expression_bodied_lambdas                           = true:silent
dotnet_diagnostic.IDE0053.severity                               = silent

# IDE0054 Use compound assignment
dotnet_style_prefer_compound_assignment                          = true:suggestion
dotnet_diagnostic.IDE0054.severity                               = suggestion

# IDE0056 Use index operator
csharp_style_prefer_index_operator                               = true:suggestion
dotnet_diagnostic.IDE0056.severity                               = suggestion

# IDE0057 Use range operator
csharp_style_prefer_range_operator                               = true:suggestion
dotnet_diagnostic.IDE0057.severity                               = suggestion

# IDE0058 Remove unused expression value
csharp_style_unused_value_expression_statement_preference        = discard_variable:none
dotnet_diagnostic.IDE0058.severity                               = none

# IDE0059 Remove unnecessary value assignment
csharp_style_unused_value_assignment_preference                  = discard_variable:silent
dotnet_diagnostic.IDE0059.severity                               = none

# IDE0060 Remove unused parameter
dotnet_code_quality_unused_parameters                            = all:warning
dotnet_diagnostic.IDE0060.severity                               = warning

# IDE0061 Use expression body for local functions
csharp_style_expression_bodied_local_functions                   = true:silent
dotnet_diagnostic.IDE0061.severity                               = silent

# IDE0062 Make local function static
csharp_prefer_static_local_function                              = true:suggestion
dotnet_diagnostic.IDE0062.severity                               = suggestion

# IDE0063 Use simple using statement
csharp_prefer_simple_using_statement                             = false:none
dotnet_diagnostic.IDE0063.severity                               = none

# IDE0065 using directive placement
csharp_using_directive_placement                                 = outside_namespace:suggestion
dotnet_diagnostic.IDE0065.severity                               = suggestion

# IDE0066 Use switch expression
csharp_style_prefer_switch_expression                            = true:suggestion
dotnet_diagnostic.IDE0066.severity                               = suggestion

# IDE0071 Simplify interpolation
dotnet_style_prefer_simplified_interpolation                     = true:suggestion
dotnet_diagnostic.IDE0071.severity                               = suggestion

# IDE0075 Simplify conditional expression
dotnet_style_prefer_simplified_boolean_expressions               = true:suggestion
dotnet_diagnostic.IDE0075.severity                               = suggestion

# IDE0078 Use pattern matching
csharp_style_prefer_pattern_matching                             = true:suggestion
dotnet_diagnostic.IDE0078.severity                               = suggestion

# IDE0083 Use pattern matching (not operator)
csharp_style_prefer_not_pattern                                  = true:suggestion
dotnet_diagnostic.IDE0083.severity                               = suggestion

# IDE0090 Simplify new expression
csharp_style_implicit_object_creation_when_type_is_apparent      = true:suggestion
dotnet_diagnostic.IDE0090.severity                               = suggestion

# IDE0130 Namespace does not match folder structure
dotnet_style_namespace_match_folder                              = true:silent
dotnet_diagnostic.IDE0130.severity                               = silent
resharper_check_namespace_highlighting                           = none

# IDE0270 Null check can be simplified
dotnet_style_coalesce_expression                                 = true:suggestion
dotnet_diagnostic.IDE0270.severity                               = suggestion

# IDE0150 Prefer null check over type check
csharp_style_prefer_null_check_over_type_check                   = true:suggestion
dotnet_diagnostic.IDE0150.severity                               = suggestion

# IDE0161 Use file-scoped namespace
csharp_style_namespace_declarations                              = file_scoped:warning
dotnet_diagnostic.IDE0161.severity                               = warning

# IDE0180 Use tuple to swap values
csharp_style_prefer_tuple_swap                                   = true:silent
dotnet_diagnostic.IDE0180.severity                               = silent

# IDE0200 Remove unnecessary lambda expression
csharp_style_prefer_method_group_conversion                      = true:silent
dotnet_diagnostic.IDE0200.severity                               = silent

# IDE0210, IDE0211 Convert to top-level statements
csharp_style_prefer_top_level_statements                         = false:silent
dotnet_diagnostic.IDE0210.severity                               = silent
dotnet_diagnostic.IDE0211.severity                               = silent

# IDE0230 Use UTF-8 string literal
csharp_style_prefer_utf8_string_literals                         = true:silent
dotnet_diagnostic.IDE0230.severity                               = silent

# IDE0250 Struct can be made 'readonly'
csharp_style_prefer_readonly_struct                              = true:suggestion
dotnet_diagnostic.IDE0250.severity                               = suggestion

# IDE0251 Member can be made 'readonly'
csharp_style_prefer_readonly_struct_member                       = true:suggestion
dotnet_diagnostic.IDE0251.severity                               = suggestion

# IDE0290 Use primary constructor
csharp_style_prefer_primary_constructors                         = false:none
dotnet_diagnostic.IDE0290.severity                               = none

# IDE1005 Use conditional delegate call
csharp_style_conditional_delegate_call                           = true:suggestion
dotnet_diagnostic.IDE1005.severity                               = suggestion

############################################################################################################
# C# Diagnostics https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/diagnostics-listing
dotnet_diagnostic.CS0618.severity = silent

############################################################################################################
# Naming Rules (IDE1006) https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules
############################################################################################################
[*.{cs,csx}]

# Define naming Styles
dotnet_naming_style.pascal_case_style.capitalization               = pascal_case

dotnet_naming_style.camel_case_underscore_style.capitalization     = camel_case
dotnet_naming_style.camel_case_underscore_style.required_prefix    = _

dotnet_naming_style.static_prefix_style.capitalization             = camel_case
dotnet_naming_style.static_prefix_style.required_prefix            = s_

dotnet_naming_style.underscore_tolerant_pascal_case.capitalization = pascal_case
dotnet_naming_style.underscore_tolerant_pascal_case.word_separator = _

# Define Symbol Groups
dotnet_naming_symbols.constant_fields_symbols.required_modifiers                 = const
dotnet_naming_symbols.constant_fields_symbols.applicable_kinds                   = field

dotnet_naming_symbols.private_internal_fields_symbols.applicable_accessibilities = private, internal
dotnet_naming_symbols.private_internal_fields_symbols.applicable_kinds           = field

dotnet_naming_symbols.private_static_fields_symbols.applicable_accessibilities   = private
dotnet_naming_symbols.private_static_fields_symbols.required_modifiers           = static
dotnet_naming_symbols.private_static_fields_symbols.applicable_kinds             = field

dotnet_naming_symbols.private_static_readonly_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_symbols.required_modifiers         = static, readonly
dotnet_naming_symbols.private_static_readonly_symbols.applicable_kinds           = field

dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities    = *
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds              = namespace, class, struct, interface, enum, delegate


# Constant fields should be PascalCase
dotnet_naming_rule.constant_fields_rule.symbols  = constant_fields_symbols
dotnet_naming_rule.constant_fields_rule.style    = pascal_case_style
dotnet_naming_rule.constant_fields_rule.severity = suggestion

# Internal and private fields should be _camelCase
dotnet_naming_rule.private_internal_fields_rule.symbols        = private_internal_fields_symbols
dotnet_naming_rule.private_internal_fields_rule.style          = camel_case_underscore_style
dotnet_naming_rule.private_internal_fields_rule.severity       = suggestion

# Naming rule for private static fields, using lower camel case
dotnet_naming_rule.private_static_fields_rule.symbols                          = private_static_fields_symbols
dotnet_naming_rule.private_static_fields_rule.style                            = camel_case_underscore_style
dotnet_naming_rule.private_static_fields_rule.severity                         = suggestion

# Naming rule for private static readonly fields, using lower camel case
dotnet_naming_rule.private_static_readonly_rule.symbols                          = private_static_readonly_symbols
dotnet_naming_rule.private_static_readonly_rule.style                            = camel_case_underscore_style
dotnet_naming_rule.private_static_readonly_rule.severity                         = suggestion

# Naming rule for types and namespaces using underscore tolerant pascal case
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_symbols
dotnet_naming_rule.types_and_namespaces_rule.style = underscore_tolerant_pascal_case
dotnet_naming_rule.types_and_namespaces_rule.severity = none
dotnet_naming_rule.types_and_namespaces_rule.resharper_style = AaBb, Aa_bb, AaBb_AaBb, AaBb_aaBb:do_not_check
dotnet_naming_rule.types_and_namespaces_rule.import_to_resharper = as_predefined
